name: Publish Package on Release

on:
  release:
    types: [published]

jobs:

  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      contents: write
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Poetry
        run: pip install poetry

      - name: Configure Poetry
        run: |
            poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install

      - name: Update version
        run: poetry version ${{ github.event.release.tag_name }}

      - name: Build wheel with maturin
        run: poetry run maturin build --release

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
            pip install twine
            twine upload target/wheels/*.whl

      - name: Upload Assets to GitHub Release
        run: gh release upload ${{ github.event.release.tag_name }} target/wheels/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR to update version
        run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            timestamp=$(date +%s)
            branch="update-version-$timestamp"
            git checkout -b $branch
            git add pyproject.toml
            git commit -m "chore: update version to ${{ github.event.release.tag_name }}"
            git push origin $branch
            gh pr create --title "chore: Bump version to ${{ github.event.release.tag_name }} after successful PyPI publish" --body "This PR updates the project version to ${{ github.event.release.tag_name }} following a successful publish to PyPI." --base main --head $branch

        env:
            GH_TOKEN: ${{ secrets.PR_PAT }}
